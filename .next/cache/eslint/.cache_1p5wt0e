[{"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/Modal/LoginModal.style.tsx":"1","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/Modal/LoginModal.tsx":"2","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/button/index.tsx":"3","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/containers/LoginContainer.style.tsx":"4","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/containers/LoginContainer.tsx":"5","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/layouts/MainLayout/MainLayout.tsx":"6","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/layouts/MainLayout/index.ts":"7","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/layouts/ModalLayout/ModalLayout.tsx":"8","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/layouts/ModalLayout/index.ts":"9","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/tabList/TabList.style.tsx":"10","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/tabList/TabList.tsx":"11","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/pages/_app.tsx":"12","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/pages/api/auth/[...nextauth].ts":"13","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/pages/api/github/api.ts":"14","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/pages/api/github/user.ts":"15","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/pages/gitTalk/index.tsx":"16","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/pages/index.tsx":"17","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/pages/styles/themes/GlobalStyle.tsx":"18","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/pages/styles/themes/colors.ts":"19","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/recoil/atoms/initState.ts":"20","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/recoil/atoms/userState.ts":"21","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/recoil/effects/persist.ts":"22","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/types/environment.d.ts":"23","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/types/next.d.ts":"24"},{"size":1890,"mtime":1663519414410,"results":"25","hashOfConfig":"26"},{"size":4201,"mtime":1663659842874,"results":"27","hashOfConfig":"26"},{"size":1186,"mtime":1662751703305,"results":"28","hashOfConfig":"26"},{"size":1755,"mtime":1662751584224,"results":"29","hashOfConfig":"26"},{"size":3864,"mtime":1666020885874,"results":"30","hashOfConfig":"26"},{"size":390,"mtime":1662747728616,"results":"31","hashOfConfig":"26"},{"size":40,"mtime":1662745780511,"results":"32","hashOfConfig":"26"},{"size":1210,"mtime":1663263842951,"results":"33","hashOfConfig":"26"},{"size":69,"mtime":1663048264975,"results":"34","hashOfConfig":"26"},{"size":711,"mtime":1663688271303,"results":"35","hashOfConfig":"26"},{"size":2061,"mtime":1663688258408,"results":"36","hashOfConfig":"26"},{"size":969,"mtime":1666021367780,"results":"37","hashOfConfig":"26"},{"size":1094,"mtime":1663698518748,"results":"38","hashOfConfig":"26"},{"size":510,"mtime":1663696208981,"results":"39","hashOfConfig":"26"},{"size":850,"mtime":1663699535100,"results":"40","hashOfConfig":"26"},{"size":805,"mtime":1666021402307,"results":"41","hashOfConfig":"26"},{"size":329,"mtime":1663519414501,"results":"42","hashOfConfig":"26"},{"size":2059,"mtime":1662746363872,"results":"43","hashOfConfig":"26"},{"size":279,"mtime":1662742051635,"results":"44","hashOfConfig":"26"},{"size":126,"mtime":1663519405866,"results":"45","hashOfConfig":"26"},{"size":2453,"mtime":1663604967340,"results":"46","hashOfConfig":"26"},{"size":937,"mtime":1663519405869,"results":"47","hashOfConfig":"26"},{"size":245,"mtime":1663694812752,"results":"48","hashOfConfig":"26"},{"size":546,"mtime":1663512915438,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2rr3gz",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/Modal/LoginModal.style.tsx",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/Modal/LoginModal.tsx",["124","125","126","127","128"],[],"/** @jsxImportSource @emotion/react */\nimport React, { ReactNode, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { LoginModalStyle, StyledModal } from \"./LoginModal.style\";\nimport ModalLayout from \"../layouts/ModalLayout\";\n\nimport BackIcon from \"@/public/image/Back.svg\";\nimport KakaoIcon from \"@/public/image/kakaoLogin.svg\";\nimport GithubIcon from \"@/public/image/github.png\";\nimport Checked from \"@/public/image/checked.svg\";\nimport Unchecked from \"@/public/image/unchecked.svg\";\nimport Image from \"next/image\";\nimport { signIn } from \"next-auth/react\";\nimport { useState } from \"react\";\nimport { useRecoilState, useRecoilValue, useResetRecoilState } from \"recoil\";\n\nimport $userState, {\n    $kakoState,\n    $githubState,\n    $loginState,\n} from \"@/src/recoil/atoms/userState\";\n\ninterface ModalProps {\n    openModal?: () => void;\n    closeModal?: () => void;\n    isOpen: boolean;\n    children?: ReactNode;\n}\n\nconst LoginModal = (props: ModalProps) => {\n    const { openModal, closeModal, isOpen } = props;\n    const router = useRouter();\n\n    const resetInitState = useResetRecoilState($userState);\n    const loginState = useRecoilValue($loginState);\n    const [githubSigned, setGithubSigned] = useRecoilState($githubState);\n    const [kakaoState, setKakaoSigned] = useRecoilState($kakoState);\n    return (\n        <ModalLayout open={isOpen}>\n            <StyledModal open={isOpen} css={LoginModalStyle}>\n                <div className=\"login-container\">\n                    <div className=\"back-btn\" onClick={closeModal}>\n                        <Image src={BackIcon} height={20} width={20} />\n                    </div>\n                    <div className=\"login-wrapper\">\n                        <div\n                            className=\"kakao-btn\"\n                            onClick={() => {\n                                signIn(\"kakao\", {\n                                    //callbackUrl: `${window.location.origin}/gitTalk`,\n                                }).then((res) => {\n                                    setKakaoSigned(true);\n                                });\n                            }}\n                        >\n                            <Image src={KakaoIcon} layout=\"responsive\" />\n                        </div>\n                        <div style={{ width: \"25px\" }}>\n                            <Image\n                                src={kakaoState ? Checked : Unchecked}\n                                layout=\"responsive\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"login-wrapper\">\n                        <div\n                            className=\"github-btn\"\n                            onClick={() =>\n                                signIn(\"github\").then((res) => {\n                                    setGithubSigned(true);\n                                })\n                            }\n                        >\n                            <div className=\"github-icon\">\n                                <Image\n                                    layout=\"responsive\"\n                                    src={GithubIcon}\n                                    height={20}\n                                    width={20}\n                                />\n                            </div>\n                            <p>Log in with GitHub</p>\n                        </div>\n                        <div style={{ width: \"25px\", alignSelf: \"center\" }}>\n                            <Image\n                                src={githubSigned ? Checked : Unchecked}\n                                layout=\"responsive\"\n                            />\n                        </div>\n                    </div>\n                    <button\n                        disabled={loginState !== \"logined\"}\n                        onClick={() => {\n                            router.push(\"/gitTalk\");\n                            resetInitState();\n                        }}\n                    >\n                        Get Start!\n                    </button>\n                </div>\n            </StyledModal>\n        </ModalLayout>\n    );\n};\n\nexport default LoginModal;\n","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/button/index.tsx",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/containers/LoginContainer.style.tsx",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/containers/LoginContainer.tsx",["129","130"],[],"import React, { useState, useEffect } from \"react\";\nimport { useSession } from \"next-auth/react\";\nimport Image from \"next/image\";\nimport { useResetRecoilState, useRecoilValue, useRecoilState } from \"recoil\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport { LoginBoxContainer, LoginWrapper } from \"./LoginContainer.style\";\n\nimport Logo from \"@/public/image/Logo.svg\";\nimport LogoLabel from \"@/public/image/GitTalk.svg\";\n\nimport Button from \"@/src/components/button\";\nimport Modal from \"../Modal/LoginModal\";\n\nimport $userState, {\n    $kakaoInfo,\n    $githubInfo,\n    $loginState,\n} from \"@/src/recoil/atoms/userState\";\n\nconst LoginContainer = () => {\n    const initState = useRecoilValue($loginState);\n    const resetInitState = useResetRecoilState($userState);\n    const [kakaoUser, setKakaoUser] = useRecoilState($kakaoInfo);\n    const [githubUser, setGithubUser] = useRecoilState($githubInfo);\n    const resetKakao = useResetRecoilState($kakaoInfo);\n    const [isModalOpen, setModalOpen] = useState(initState !== \"none\");\n    const { data, status } = useSession();\n\n    if (status === \"loading\") {\n        return <></>;\n    } else {\n        console.log(initState);\n        if (initState !== \"githubSigned\" && kakaoUser == null) {\n            if (\n                githubUser == null ||\n                (githubUser !== null && githubUser.id !== data?.user.id)\n            )\n                setKakaoUser(data?.user);\n        } else if (initState !== \"kakaoSigned\" && githubUser == null)\n            if (\n                kakaoUser == null ||\n                (kakaoUser !== null && kakaoUser.id !== data?.user.id)\n            )\n                setGithubUser(data?.user);\n    }\n    return (\n        <>\n            <LoginBoxContainer>\n                <AnimatePresence\n                    initial={initState === \"none\" || status != \"authenticated\"}\n                >\n                    <motion.div\n                        className=\"loginDiv\"\n                        initial={{ opacity: 0, scale: 0.7 }}\n                        animate={{ opacity: 1, scale: 1 }}\n                        transition={{\n                            default: {\n                                duration: 0.2,\n                                ease: [0, 0.71, 0.2, 1.01],\n                            },\n                            scale: {\n                                type: \"spring\",\n                                damping: 4,\n                                stiffness: 100,\n                                restDelta: 0.001,\n                            },\n                        }}\n                    >\n                        <LoginWrapper>\n                            <Image src={Logo} />\n                            <Image src={LogoLabel} />\n                            <h1>카톡으로 작업 내용을 쉽게 알리자!</h1>\n                            <Button\n                                selected={false}\n                                onClick={() => setModalOpen(true)}\n                            >\n                                Login\n                            </Button>\n                        </LoginWrapper>\n                    </motion.div>\n                </AnimatePresence>\n            </LoginBoxContainer>\n            {isModalOpen ||\n            (isModalOpen &&\n                initState == \"none\" &&\n                status == \"authenticated\") ? (\n                <Modal\n                    openModal={() => setModalOpen(true)}\n                    closeModal={() => {\n                        setModalOpen(false);\n                        resetInitState();\n                    }}\n                    isOpen={\n                        isModalOpen ||\n                        (initState == \"none\" && status == \"authenticated\")\n                    }\n                ></Modal>\n            ) : null}\n        </>\n    );\n};\n\nexport default LoginContainer;\n","/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/layouts/MainLayout/MainLayout.tsx",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/layouts/MainLayout/index.ts",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/layouts/ModalLayout/ModalLayout.tsx",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/layouts/ModalLayout/index.ts",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/tabList/TabList.style.tsx",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/components/tabList/TabList.tsx",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/pages/_app.tsx",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/pages/api/auth/[...nextauth].ts",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/pages/api/github/api.ts",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/pages/api/github/user.ts",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/pages/gitTalk/index.tsx",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/pages/index.tsx",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/pages/styles/themes/GlobalStyle.tsx",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/pages/styles/themes/colors.ts",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/recoil/atoms/initState.ts",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/recoil/atoms/userState.ts",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/recoil/effects/persist.ts",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/types/environment.d.ts",[],[],"/Users/hyomin/Desktop/hyomin/study/nextjs/gitTalk/src/types/next.d.ts",[],[],{"ruleId":"131","severity":1,"message":"132","line":43,"column":25,"nodeType":"133","endLine":43,"endColumn":72},{"ruleId":"131","severity":1,"message":"132","line":56,"column":29,"nodeType":"133","endLine":56,"endColumn":74},{"ruleId":"131","severity":1,"message":"132","line":59,"column":29,"nodeType":"133","endLine":62,"endColumn":31},{"ruleId":"131","severity":1,"message":"132","line":75,"column":33,"nodeType":"133","endLine":80,"endColumn":35},{"ruleId":"131","severity":1,"message":"132","line":85,"column":29,"nodeType":"133","endLine":88,"endColumn":31},{"ruleId":"131","severity":1,"message":"132","line":71,"column":29,"nodeType":"133","endLine":71,"endColumn":49},{"ruleId":"131","severity":1,"message":"132","line":72,"column":29,"nodeType":"133","endLine":72,"endColumn":54},"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]